{
  "version": 3,
  "sources": ["../../../lib/component/omni-modal/omni-modal.ts"],
  "sourcesContent": ["import { html } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { OmniElement } from '../../omni-element.js';\n\nimport {css} from 'lit';\nconst styles = css`:host{--left: 100px;--top: 100px;--z-index: 1000}dialog{border:none;border-radius:5px;padding:1rem}dialog[non-modal]{margin:0;border:none;border-radius:5px;z-index:var(--z-index);box-shadow:0 0 15px rgba(0,0,0,.1);position:fixed;left:var(--left);top:var(--top)}dialog::backdrop{background-color:rgba(0,0,0,.4)}dialog[cursor-pointer]::backdrop{background-color:rgba(0,0,0,.4)}header.has-header{border-bottom:1px solid #e9ecef;margin:0 -1rem;padding:0 1rem 1rem}`\n\n\n/**\n * To include within your project `import 'omni-ui/omni-modal.js';`\n *\n * @tagname omni-modal\n * @cssprop [--left=100px] - left position of the non-modal dialog\n * @cssprop [--top=100px] - top position of the non-modal dialog\n * @cssprop [--z-index=1000] - z-index of the non-modal dialog\n * @slot header - header slot\n * @slot default - body slot\n * @slot footer - footer slot\n * @event {} cancel - fires event when clicks on cancel\n */\nexport class OmniModal extends OmniElement {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  @state() private _hasHeader: boolean = false;\n  @state() private _isModal: boolean = false;\n  @query('dialog') private _dialogEl: HTMLDialogElement;\n  @property({ type: Boolean, reflect: true }) initialFocus: boolean = false;\n\n  public show() {\n    this._isModal = false;\n    this._dialogEl.show();\n    if (this.initialFocus) {\n      this._dialogEl.focus();\n    }\n  }\n\n  public showModal() {\n    this._isModal = true;\n    this._dialogEl.showModal();\n    if (this.initialFocus) {\n      this._dialogEl.focus();\n    }\n  }\n\n  public close() {\n    this.dispatchNewEvent('cancel');\n    return this._dialogEl.close();\n  }\n\n  #handleHeaderSlotChange(e: Event & { target: HTMLSlotElement }) {\n    this._hasHeader = e.target.assignedElements({ flatten: true }).length > 0;\n  }\n\n  render() {\n    return html`\n      <dialog part=\"dialog\" ?non-modal=${!this._isModal}>\n        <header class=${classMap({ 'has-header': this._hasHeader })} part=\"header\">\n          <slot name=\"header\" @slotchange=${this.#handleHeaderSlotChange}></slot>\n        </header>\n        <slot></slot>\n        <slot name=\"footer\"></slot>\n      </dialog>\n    `;\n  }\n}\n\nOmniElement.register('omni-modal', OmniModal);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-modal': OmniModal;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;AAAA,SAAS,YAAY;AACrB,SAAS,UAAU,OAAO,aAAa;AACvC,SAAS,gBAAgB;AACzB,SAAS,mBAAmB;AAE5B,SAAQ,WAAU;AAClB,MAAM,SAAS;AAeR,MAAM,kBAAkB,YAAY;AAAA,EAApC;AAAA;AAKI,SAAQ,aAAsB;AAC9B,SAAQ,WAAoB;AAEO,wBAAwB;AAAA;AAAA,EAPpE,WAAW,SAAS;AAClB,WAAO,CAAC,GAAG,MAAM,QAAQ,MAAM;AAAA,EACjC;AAAA,EAOO,OAAO;AACZ,SAAK,WAAW;AAChB,SAAK,UAAU,KAAK;AACpB,QAAI,KAAK,cAAc;AACrB,WAAK,UAAU,MAAM;AAAA,IACvB;AAAA,EACF;AAAA,EAEO,YAAY;AACjB,SAAK,WAAW;AAChB,SAAK,UAAU,UAAU;AACzB,QAAI,KAAK,cAAc;AACrB,WAAK,UAAU,MAAM;AAAA,IACvB;AAAA,EACF;AAAA,EAEO,QAAQ;AACb,SAAK,iBAAiB,QAAQ;AAC9B,WAAO,KAAK,UAAU,MAAM;AAAA,EAC9B;AAAA,EAEA,wBAAwB,GAAwC;AAC9D,SAAK,aAAa,EAAE,OAAO,iBAAiB,EAAE,SAAS,KAAK,CAAC,EAAE,SAAS;AAAA,EAC1E;AAAA,EAEA,SAAS;AACP,WAAO;AAAA,yCAC8B,CAAC,KAAK,QAAQ;AAAA,wBAC/B,SAAS,EAAE,cAAc,KAAK,WAAW,CAAC,CAAC;AAAA,4CACvB,KAAK,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMtE;AACF;AAzCmB;AAAA,EAAhB,MAAM;AAAA,GALI,UAKM;AACA;AAAA,EAAhB,MAAM;AAAA,GANI,UAMM;AACQ;AAAA,EAAxB,MAAM,QAAQ;AAAA,GAPJ,UAOc;AACmB;AAAA,EAA3C,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAR/B,UAQiC;AAwC9C,YAAY,SAAS,cAAc,SAAS;",
  "names": []
}
