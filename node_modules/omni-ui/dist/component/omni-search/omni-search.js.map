{
  "version": 3,
  "sources": ["../../../lib/component/omni-search/omni-search.ts"],
  "sourcesContent": ["import { html, nothing } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { OmniElement } from '../../omni-element.js';\nimport { debounce } from '../../omni-util.js';\nimport type { Option } from '../omni-dropdown/omni-dropdown.types.js';\nimport '../omni-options/omni-options.js';\n\nimport {css} from 'lit';\nconst styles = css`omni-style,.omni .field,.control,input{position:relative;height:100%;display:flex;flex-direction:column}.icon{pointer-events:all !important;cursor:pointer !important;z-index:auto !important;display:flex;flex-direction:column;justify-content:center;align-items:center}.icon.is-left-icon{position:absolute;left:0;bottom:0;margin:auto 0}.icon.is-right-icon{position:absolute;right:0;bottom:0;margin:auto 0}.omni .input:focus-visible{box-shadow:none !important}omni-icon{font-size:1.5rem}omni-icon::part(icon){max-height:100%}.options{position:absolute;max-height:15rem;background:#fff;margin-top:5px;z-index:10;width:100%;border-radius:10px;box-shadow:0 8px 44px -5px rgba(38,55,79,.29);overflow:auto;cursor:pointer}`\n\n\n/**\n * To include within your project `import { OmniSearch } from 'omni-ui';`\n *\n * **Basic Omni Icon Action Rendering**:\n *\n * ```html\n * <omni-style>\n *   <omni-search /@search-update = ${onFliter}\n *       inputDebounceTimer = 100\n *       ph = `Search`\n *       isopen\n *       .filteredOptions = [`abc`,`cde`]>\n *   </omni-search>\n * </omni-style>\n * ```\n *\n * ** Callback Function**:\n *\n * ```Js\n * filteredWords = filteredOptions;\n *\n * function onFliter(event){\n *   let value = event.detail.value;\n *   filteredWords = filteredOptions.filter((word) => {\n *      const val = typeof word === 'object' ? word.value : word;\n *      if(val.toLowerCase().trim().includes(value.toLowerCase())){\n *         return word;\n *      }\n *   })\n * }\n * ```\n * @tagname omni-search\n * @event {CustomEvent<string>} search-update - fires event when user types in search box\n */\n\nexport class OmniSearch extends OmniElement {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  @property({ type: Boolean }) isExpanded: boolean = false;\n  @property({ type: String }) value: string = '';\n  /** placeholder for search input */\n  @property({ type: String }) ph: string = '';\n  @property({ type: Array, reflect: true }) filteredOptions: Option[] = [];\n  @property({ type: Boolean, attribute: true, reflect: true }) isOpen: boolean = false;\n  @property({ type: Number }) inputDebounceTimer: number = 750;\n  @state() private _showFilterOptions: boolean = false;\n  @state() private _optionsStyle = { top: '25px' };\n  @query('.field') private _inputField: HTMLDivElement;\n\n  async connectedCallback() {\n    super.connectedCallback();\n    if (this.filteredOptions.length > 0) document.addEventListener('click', this.#handleOutsideClick);\n    if (this.value) {\n      await this.updateComplete;\n      this.updateSearch();\n    }\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    document.removeEventListener('click', this.#handleOutsideClick);\n  }\n\n  updated(changed: Map<string, unknown>) {\n    if (!changed.has('_optionsStyle') && this.filteredOptions?.length && this._inputField) {\n      const height = this._inputField.getBoundingClientRect().height;\n      this._optionsStyle = { top: `${height}px` };\n    }\n  }\n\n  getInput(): HTMLInputElement | undefined {\n    return this.shadowRoot.querySelector('#search-input');\n  }\n\n  async toggleSearch(flag = !this.isExpanded) {\n    this.isExpanded = this.isOpen ? this.isOpen : flag;\n    if (flag || this.isOpen) {\n      await this.updateComplete;\n      this.getInput()?.focus();\n    }\n  }\n\n  closeSearch() {\n    this.getInput().value = '';\n    this.value = '';\n    this.toggleSearch(false);\n    this.updateSearch();\n  }\n\n  #optionsOpen() {\n    if (this.filteredOptions.length > 0) {\n      this._showFilterOptions = true;\n    }\n  }\n\n  /** @internal */\n  #handleOutsideClick = (event: MouseEvent) => {\n    if (!event.composedPath().includes(this._inputField)) {\n      this._showFilterOptions = false;\n    }\n  };\n\n  updateSearch() {\n    const { value } = this.getInput() ?? { value: this.value };\n    this.value = value;\n    this.dispatchNewEvent('search-update', { detail: { value } });\n    this._showFilterOptions = true;\n  }\n\n  /** @internal */\n  get xIconTemplate() {\n    if (this.isOpen && !this.value?.length) return nothing;\n    return html`\n      <span class=\"icon is-right-icon\" part=\"x-icon-wrapper\">\n        <omni-icon part=\"x-icon\" id=\"clear-search-icon\" icon-id=\"omni:interactive:close\" @click=${this.closeSearch}>\n        </omni-icon>\n      </span>\n    `;\n  }\n\n  #selectFromFilteredList(e: CustomEvent<Option>) {\n    const data = e.detail;\n    this.value = String(typeof data === 'object' ? data.value : data);\n    this.dispatchNewEvent('search-update', { detail: { value: this.value.trim() } });\n    this._showFilterOptions = false;\n  }\n\n  #handleEnterOnItem(e: CustomEvent<{ eventKey: string; value: Option }>) {\n    if (e.detail.eventKey === 'Enter') {\n      const data = e.detail.value;\n      this.value = String(typeof data === 'object' ? data.value : data);\n      this.dispatchNewEvent('search-update', { detail: { value: this.value.trim() } });\n      this._showFilterOptions = false;\n    }\n    if (e.detail.eventKey === 'Escape') {\n      this._showFilterOptions = false;\n    }\n  }\n\n  render() {\n    return html`\n      <omni-style>\n        ${this.isExpanded || this.isOpen\n          ? html`\n              <div class=\"field\">\n                <div class=\"control has-icons-left has-icons-right\">\n                  <input\n                    class=\"input is-small\"\n                    part=\"input\"\n                    type=\"text\"\n                    id=\"search-input\"\n                    tabindex=\"-1\"\n                    placeholder=\"${this.ph || 'Search Entry'}\"\n                    @focus=${this.#optionsOpen}\n                    @input=${debounce(() => this.updateSearch(), this.inputDebounceTimer)}\n                    .value=${this.value} />\n                  <span class=\"icon is-left-icon\" part=\"search-icon-opened-wrapper\">\n                    <omni-icon\n                      part=\"search-icon-opened\"\n                      icon-id=\"omni:interactive:search\"\n                      @click=${this.toggleSearch}></omni-icon>\n                  </span>\n                  ${this.xIconTemplate}\n                </div>\n                ${this._showFilterOptions && this.filteredOptions?.length\n                  ? html`\n                      <div class=\"options\" style=${styleMap(this._optionsStyle)}>\n                        <omni-options\n                          .options=${this.filteredOptions}\n                          @selectChange=${e => {\n                            this.#selectFromFilteredList(e);\n                          }}\n                          @enterOnItem=${e => {\n                            this.#handleEnterOnItem(e);\n                          }}></omni-options>\n                      </div>\n                    `\n                  : nothing}\n              </div>\n            `\n          : html`\n              <div class=\"icon\" part=\"search-icon-closed-wrapper\">\n                <omni-icon\n                  part=\"search-icon-closed\"\n                  icon-id=\"omni:interactive:search\"\n                  @click=${this.toggleSearch}></omni-icon>\n              </div>\n            `}\n      </omni-style>\n    `;\n  }\n}\n\nOmniElement.register('omni-search', OmniSearch);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-search': OmniSearch;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
