{
  "version": 3,
  "sources": ["../../../lib/component/omni-accordion/omni-accordion.ts"],
  "sourcesContent": ["import { html, nothing } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { OmniElement } from '../../omni-element.js';\nimport { OmniIcon } from '../omni-icon/omni-icon.js';\n\nimport {css} from 'lit';\nconst styles = css`:host([disabled]){cursor:not-allowed}details[disabled]{pointer-events:none;opacity:.5}details[open] summary.highlighted{background-color:#f5f8fb}details[open] summary.highlighted .header{color:var(--color-primary)}summary{display:flex;justify-content:space-between;padding:0.7142857143rem;width:100%;list-style:none;cursor:pointer;overflow:hidden}summary.left{justify-content:flex-start;flex-direction:row}summary.right{flex-direction:row-reverse}summary::marker,summary::-webkit-details-marker{display:none}.header{font-size:1rem;font-weight:600}.header.inline{display:flex;flex-direction:flex-start;align-items:baseline}.header.bottom{display:flex;flex-direction:column;justify-content:center}.subheader{font-size:0.8571428571rem;color:var(--color-core-medium)}.m-left{margin-left:0.7142857143rem}.m-top{margin-top:0.3571428571rem}omni-icon{height:1.4285714286rem;width:1.4285714286rem;margin-right:0.5714285714rem;margin-top:0.1428571429rem}`\n\nimport { getElementSize } from '../../omni-util.js';\n\nOmniIcon.register();\n\n/**\n * To include within your project `import { OmniAccordion } from 'omni-ui/omni-accordion.js';`\n *\n * @tagname omni-accordion\n * @slot - slot for the content of the accordion\n * @slot summary - slot for the summary of the accordion\n * @event {boolean} toggle - fires when the accordion is opened or closed\n */\n\nexport class OmniAccordion extends OmniElement {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  @query('details') private _details: HTMLDetailsElement;\n  @query('#body') private _body: HTMLSlotElement;\n  @state() private _initialHeight: string;\n  @state() private _finalHeight: string;\n  @property({ type: Boolean, attribute: 'animate-accordion' }) animateAccordion: boolean = false;\n  @property({ type: Boolean }) open: boolean = false;\n  @property({ type: String }) name: string = '';\n  @property({ type: String }) variant: 'default' | 'highlighted' = 'default';\n  @property({ type: String }) header: string = '';\n  @property({ type: String }) subheader: string = '';\n  @property({ type: String }) subplacement: 'inline' | 'bottom' = 'inline';\n  @property({ type: String }) position: 'left' | 'right' = 'left';\n  @property({ type: Boolean }) disabled: boolean = false;\n\n  async firstUpdated() {\n    await this.updateComplete;\n    this.animateAccordion && this.#calculateHeight();\n  }\n\n  updated(changed) {\n    if (changed.has('open')) {\n      if (this.open) {\n        this._details.open = this.open;\n      }\n    }\n  }\n\n  #calculateHeight() {\n    let sum = 0;\n    this._body.assignedElements().forEach(el => {\n      sum += getElementSize(el as HTMLElement).height;\n    });\n    const detailsHeight = getElementSize(this._details).height;\n    if (this.open) {\n      this._initialHeight = `${detailsHeight - sum}px`;\n      this._finalHeight = `${detailsHeight}px`;\n    } else {\n      this._initialHeight = `${detailsHeight}px`;\n      this._finalHeight = `${sum + detailsHeight}px`;\n    }\n  }\n\n  async #animateAccordion() {\n    const animateParams = this.open\n      ? [{ height: this._initialHeight }, { height: this._finalHeight }]\n      : [{ height: this._finalHeight }, { height: this._initialHeight }];\n    const originalOverflow = this._details.style.overflow;\n    this._details.style.overflow = 'hidden';\n    await this._details.animate(animateParams, {\n      duration: 350,\n      easing: 'cubic-bezier(0.12, 1.09, 0.87, 0.98)'\n    }).finished;\n    this._details.style.overflow = originalOverflow;\n  }\n\n  async #handleClick(e?: PointerEvent) {\n    if (this.animateAccordion) {\n      e?.preventDefault();\n      this.open = !this.open;\n      if (this.open) {\n        this._details.open = this.open;\n      }\n      await this.#animateAccordion();\n      if (!this.open) {\n        this._details.open = this.open;\n      }\n    }\n  }\n\n  #handleToggle(e: ToggleEvent) {\n    if (!this.animateAccordion) {\n      this.open = e.newState === 'open';\n      this.dispatchNewEvent('toggle', { detail: this.open });\n    }\n  }\n\n  public async close() {\n    if (!this.open) return;\n    this.open = false;\n    if (this.animateAccordion) {\n      await this.#animateAccordion();\n    }\n    this._details.open = false;\n  }\n\n  render() {\n    return html`\n      <details part=\"details\" ?disabled=${this.disabled} @toggle=${this.#handleToggle}>\n        <summary @click=${this.#handleClick} class=${this.position + ' ' + this.variant} part=\"summary\">\n          <omni-icon\n            part=\"icon\"\n            aria-label=\"alert\"\n            icon-id=${this.open ? 'omni:interactive:up' : 'omni:interactive:down'}>\n          </omni-icon>\n          ${!this.header\n            ? html`<slot name=\"summary\"></slot>`\n            : html` <div class=\"header ${this.subplacement}\" part=\"header\">\n                ${this.header}\n                <!-- subheader -->\n                ${this.subheader\n                  ? html`<span\n                      class=\"subheader \n                      ${this.subplacement === 'inline' ? 'm-left' : 'm-top'}\">\n                      ${this.subheader}</span\n                    >`\n                  : nothing}\n              </div>`}\n        </summary>\n        <slot\n          id=\"body\"\n          @slotchange=${() => {\n            this.animateAccordion && this.#calculateHeight();\n          }}></slot>\n      </details>\n    `;\n  }\n}\n\nOmniElement.register('omni-accordion', OmniAccordion);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-accordion': OmniAccordion;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
