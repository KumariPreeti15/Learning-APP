import { ElementInternalsBase } from '../../element-internals-base.js';
/**
 * Stylized and configurable textarea input with auto-grow. Configurations include the ability to
 * set min and max rows, display a character limit indicator, and add a customizable error state.
 *
 * To include within your project `import { OmniTextarea } from 'omni-ui';`
 *
 * @tagname omni-textarea
 * @attr {boolean} transparent - make textarea background transparent
 * @event {string} change - fires when the user starts making change in textarea
 */
export declare class OmniTextarea extends ElementInternalsBase<string> {
    #private;
    /**@internal */
    static get shadowRootOptions(): {
        delegatesFocus: boolean;
        mode: ShadowRootMode;
        serializable?: boolean;
        slotAssignment?: SlotAssignmentMode;
    };
    static get styles(): import("lit").CSSResult[];
    /** placeholder for textarea input */
    placeholder: string;
    /** current value of textarea input */
    value: string;
    /** name attribute for form association */
    name: string;
    /** label for textarea input */
    label: string;
    /** custom error message of textarea input */
    error: string;
    /** error message when value is missing */
    valueMissingMessage: string;
    /** boolean property show/hide footer */
    hidefooter: boolean;
    /** allow textarea input to be resized */
    resize: boolean;
    /** minimum number of rows in textarea input */
    rows: number;
    /** max number of allowed rows in textarea input */
    maxRows: number;
    /** character count for textarea input */
    characterCount: number;
    /** display character limit indicator */
    showCharacterCountdown: boolean;
    private _charactersRemaining;
    private textarea;
    firstUpdated(): Promise<void>;
    willUpdate(propertiesToChange: Map<string, unknown>): void;
    /** clear the textarea and resize to the default rows */
    clear(): Promise<void>;
    render(): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'omni-textarea': OmniTextarea;
    }
}
//# sourceMappingURL=omni-textarea.d.ts.map