{
  "version": 3,
  "sources": ["../../../lib/component/omni-switch/omni-switch.ts"],
  "sourcesContent": ["import { html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { OmniElement } from '../../omni-element.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport {css} from 'lit';\nconst styles = css`:host{display:inline-block;--omni-switch-gap: pxToRem(12)}:host([disabled]){opacity:50%}.container{--generic-switch-focus: none;position:relative;height:auto;cursor:pointer}:host([disabled]) .container{cursor:not-allowed}.container{display:flex;align-items:center}.track{background-color:var(--color-shark);border-radius:0.8571428571rem;width:3.4285714286rem;height:1.7142857143rem;position:relative}.toggle{width:auto;height:auto}label{margin-right:0.7142857143rem}:not([name=end])::slotted(*){margin-right:var(--omni-switch-gap)}[name=end]{display:inline-block}[name=end]::slotted(*){margin-left:var(--omni-switch-gap)}.thumb{top:0;position:absolute;right:auto;margin:0.2142857143rem;border-radius:50%;background-color:#fff;height:1.2857142857rem;width:1.2857142857rem;transition:transform .1s ease}:host([checked]) .track{background-image:var(--gradient-electric-blue)}:host([checked][error]) .track{background-image:var(--gradient-error)}:host([checked]) .track::after{content:\"\";display:block;top:30%;left:20%;height:0.4285714286rem;width:0.7857142857rem;position:absolute;border-style:solid;border-color:#fff;border-width:0 0 0.0714285714rem 0.0714285714rem;transform:rotate(310deg)}:host([checked]) .thumb{transform:translateX(1.7142857143rem)}.toggle:focus{outline:0}.toggle:focus-visible{box-shadow:0 0 0 0.2142857143rem var(--color-electric-blue) !important;border-radius:0.8571428571rem}`\n\n\n/**\n * To include within your project `import { OmniSwitch } from 'omni-ui';`\n *\n * @tagname omni-switch\n * @slot  default - left label slot\n * @slot  end - right label slot\n * @event {{checked: boolean}} change - fires when the switch is toggled\n */\n\nexport class OmniSwitch extends OmniElement {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  /** state of the switch (on/off) */\n  @property({ type: Boolean, reflect: true }) checked: boolean = false;\n  /** indicator that the switch is in error state */\n  @property({ type: Boolean, reflect: true }) error: boolean = false;\n  /** disable the switch from user interaction */\n  @property({ type: Boolean, reflect: true }) disabled: boolean = false;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('click', this.#handleCheckedChanged);\n    this.addEventListener('keyup', this.#handleKeyup);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.removeEventListener('click', this.#handleCheckedChanged);\n    this.removeEventListener('keyup', this.#handleKeyup);\n  }\n\n  #handleCheckedChanged(e: Event = null, toggle = !this.checked) {\n    if (this.disabled) return;\n    this.checked = toggle;\n    const evtDetail = { detail: { checked: this.checked } };\n    this.dispatchNewEvent('input', evtDetail);\n    this.dispatchNewEvent('change', evtDetail);\n  }\n\n  #handleKeyup = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      this.#handleCheckedChanged();\n    }\n    if (e.key === 'Escape') {\n      this.blur();\n    }\n  };\n\n  render() {\n    const classes = classMap({\n      checked: this.checked,\n      error: this.error\n    });\n    return html`\n      <div class=\"container\" part=\"container\">\n        <label> <slot></slot> </label>\n        <div part=\"toggle\" class=\"toggle ${classes}\" tabindex=\"0\">\n          <div class=\"track\"></div>\n          <div class=\"thumb\"></div>\n        </div>\n        <slot name=\"end\"></slot>\n      </div>\n    `;\n  }\n}\n\nOmniElement.register('omni-switch', OmniSwitch);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-switch': OmniSwitch;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;AAAA,SAAS,YAAY;AACrB,SAAS,gBAAgB;AACzB,SAAS,mBAAmB;AAC5B,SAAS,gBAAgB;AAEzB,SAAQ,WAAU;AAClB,MAAM,SAAS;AAYR,MAAM,mBAAmB,YAAY;AAAA,EAArC;AAAA;AAMuC,mBAAmB;AAEnB,iBAAiB;AAEjB,oBAAoB;AAsBhE,wBAAe,CAAC,MAAqB;AACnC,UAAI,EAAE,QAAQ,SAAS;AACrB,aAAK,sBAAsB;AAAA,MAC7B;AACA,UAAI,EAAE,QAAQ,UAAU;AACtB,aAAK,KAAK;AAAA,MACZ;AAAA,IACF;AAAA;AAAA,EAtCA,WAAW,SAAS;AAClB,WAAO,CAAC,GAAG,MAAM,QAAQ,MAAM;AAAA,EACjC;AAAA,EASA,oBAAoB;AAClB,UAAM,kBAAkB;AACxB,SAAK,iBAAiB,SAAS,KAAK,qBAAqB;AACzD,SAAK,iBAAiB,SAAS,KAAK,YAAY;AAAA,EAClD;AAAA,EAEA,uBAA6B;AAC3B,UAAM,qBAAqB;AAC3B,SAAK,oBAAoB,SAAS,KAAK,qBAAqB;AAC5D,SAAK,oBAAoB,SAAS,KAAK,YAAY;AAAA,EACrD;AAAA,EAEA,sBAAsB,IAAW,MAAM,SAAS,CAAC,KAAK,SAAS;AAC7D,QAAI,KAAK,SAAU;AACnB,SAAK,UAAU;AACf,UAAM,YAAY,EAAE,QAAQ,EAAE,SAAS,KAAK,QAAQ,EAAE;AACtD,SAAK,iBAAiB,SAAS,SAAS;AACxC,SAAK,iBAAiB,UAAU,SAAS;AAAA,EAC3C;AAAA,EAEA;AAAA,EASA,SAAS;AACP,UAAM,UAAU,SAAS;AAAA,MACvB,SAAS,KAAK;AAAA,MACd,OAAO,KAAK;AAAA,IACd,CAAC;AACD,WAAO;AAAA;AAAA;AAAA,2CAGgC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOhD;AACF;AAnD8C;AAAA,EAA3C,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAN/B,WAMiC;AAEA;AAAA,EAA3C,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAR/B,WAQiC;AAEA;AAAA,EAA3C,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAV/B,WAUiC;AAiD9C,YAAY,SAAS,eAAe,UAAU;",
  "names": []
}
