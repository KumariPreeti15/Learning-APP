import { type TemplateResult } from 'lit';
import { OmniElement } from '../../omni-element.js';
import type { KeyFn, Sort, TableColumn, TableData } from '../omni-table/omni-table.js';
/**
 * To include within your project `import 'omni-ui/omni-table-sticky.js';`
 *
 * @event {CustomEvent<Sort | {data: TableData, sort: Sort}>} sort - fires when a column header is clicked
 * @tagname omni-table-sticky
 */
export declare class OmniTableSticky extends OmniElement {
    #private;
    static get styles(): import("lit").CSSResult[];
    private _shouldShowShadow;
    private _scrollTablePadding;
    private _stickyScrollbarStyles;
    private _stickyScrollBarOverflowWidth;
    /** default=right. You can configure which side of the table is sticky */
    stickySide: 'left' | 'right';
    /** configure the columns to be displayed on the left hand side */
    leftColumns: TableColumn[];
    /** configure the columns to be displayed on the right hand side */
    rightColumns: TableColumn[];
    /** turn on the sticky scrollbar for tables with many rows. Helps users scroll horizontally when bottom scrollbar is not visible */
    stickyScrollbar: boolean;
    /** data to be displayed in the table */
    data: TableData[];
    sort: Sort | Record<string, unknown>;
    nestedIndent: number;
    keyFn: KeyFn;
    expandAllOnLoad: boolean;
    hideNestedIndent: boolean;
    private _rightTableEl;
    private _leftTableEl;
    private _scrollContainerEl;
    constructor();
    firstUpdated(): void;
    updated(changed: Map<string, unknown>): void;
    disconnectedCallback(): void;
    render(): TemplateResult<1>;
}
//# sourceMappingURL=omni-table-sticky.d.ts.map