{
  "version": 3,
  "sources": ["../../omni-ui/lib/component/omni-table/omni-drag-and-drop-rows.ts"],
  "sourcesContent": ["import type { ReactiveController } from 'lit';\nimport type { OmniTable } from './omni-table.js';\n\nexport class DragAndDropRowsController implements ReactiveController {\n  #host: OmniTable;\n  #tableRef: HTMLTableElement;\n  #tableBodyRef: HTMLElement;\n  #sourceIndex: number;\n  #nestedDataExists: boolean;\n  #sourceElement: HTMLElement;\n  #sourceHandle: HTMLElement;\n\n  constructor(host: OmniTable, tableRef: HTMLTableElement, tableBodyRef: HTMLElement, nestedDataExists: boolean) {\n    this.#host = host;\n    this.#tableRef = tableRef;\n    this.#tableBodyRef = tableBodyRef;\n    this.#nestedDataExists = nestedDataExists;\n    this.#host.addController(this);\n  }\n\n  hostConnected() {\n    this.#tableBodyRef.addEventListener('pointerdown', this.#handlePointerDown);\n    this.#tableBodyRef.addEventListener('pointerup', this.#handlePointerUp);\n  }\n\n  hostDisconnected() {\n    this.#tableBodyRef.removeEventListener('pointerdown', this.#handlePointerDown);\n    this.#tableBodyRef.removeEventListener('pointerup', this.#handlePointerUp);\n  }\n\n  #handlePointerDown = (e: PointerEvent) => {\n    const target = e.target as HTMLElement;\n    const element = target.closest('tr');\n    this.#sourceElement = element;\n    this.#sourceHandle = target.closest('td');\n    element.setAttribute('draggable', 'true');\n    this.#tableBodyRef.addEventListener('dragend', this.#handleDragEnd);\n    this.#tableBodyRef.addEventListener('dragstart', this.#handleDragStart);\n    this.#tableBodyRef.addEventListener('dragover', this.#handleDragOver);\n    this.#tableBodyRef.addEventListener('dragleave', this.#handleDragLeave);\n    this.#tableBodyRef.addEventListener('drop', this.#handleDrop);\n  };\n\n  #handlePointerUp = (e: PointerEvent) => {\n    this.#tableBodyRef.removeEventListener('dragend', this.#handleDragEnd);\n    this.#tableBodyRef.removeEventListener('dragstart', this.#handleDragStart);\n    this.#tableBodyRef.removeEventListener('dragover', this.#handleDragOver);\n    this.#tableBodyRef.removeEventListener('dragleave', this.#handleDragLeave);\n    this.#tableBodyRef.removeEventListener('drop', this.#handleDrop);\n  };\n\n  #handleDragEnd = (e: DragEvent) => {\n    const element = e.target as HTMLElement;\n    element.style.opacity = '1';\n    element.removeAttribute('draggable');\n  };\n\n  #handleDragStart = (e: DragEvent) => {\n    const element = e.target as HTMLElement;\n    this.#sourceIndex = +element.getAttribute('drag-id');\n    e.dataTransfer.effectAllowed = 'move';\n    element.style.opacity = '0.4';\n    if (this.#nestedDataExists) this.#host.collapseAll();\n  };\n\n  #handleDragOver = (e: DragEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLElement;\n    const element = target.closest('.line-container');\n    if (element) {\n      // check if the line is the same as the dragged line or the line before it\n      const lineId = +element.getAttribute('line-id');\n      if (this.#sourceIndex === lineId || this.#sourceIndex === lineId - 1) return;\n      element.setAttribute('drag-over', '');\n    }\n  };\n\n  #handleDragLeave = (e: DragEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLElement;\n    const element = target.closest('.line-container');\n    if (element) {\n      element.removeAttribute('drag-over');\n    }\n  };\n\n  #handleDrop = async (e: DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const target = e.target as HTMLElement;\n    if (this.#tableRef !== target.closest('table')) return;\n    const element = target.closest('.line-container');\n    if (element) {\n      const lineId = +element.getAttribute('line-id');\n      element.removeAttribute('drag-over');\n      await Promise.all([\n        this.#createDroppedElementAnimation(e, this.#sourceIndex, lineId),\n        ...this.#createMovedElementsAnimation(e, this.#sourceIndex, lineId)\n      ]);\n      this.#updateData(this.#sourceIndex, lineId);\n    }\n  };\n\n  #updateData(sourceId, destinationId) {\n    if (sourceId < destinationId) destinationId--;\n    this.#host.dispatchNewEvent('omni-drop', {\n      detail: { moveFromIdx: this.#sourceIndex, moveToIdx: destinationId }\n    });\n  }\n\n  #createMovedElementsAnimation(e: DragEvent, moveFromIdx: number, moveToIdx: number) {\n    let moveToIndex = moveToIdx;\n    const elements = this.#tableBodyRef.querySelectorAll('tr[drag-id]');\n    const animationArray: Promise<Animation>[] = [];\n    if (moveFromIdx < moveToIdx) {\n      moveToIndex--;\n      for (let i = moveFromIdx + 1; i <= moveToIndex; i++) {\n        const prevRect = elements[i - 1].getBoundingClientRect();\n        const currentRect = elements[i].getBoundingClientRect();\n        const diff = currentRect.top - prevRect.top;\n        animationArray.push(\n          elements[i].animate([{ transform: 'translateY(0)' }, { transform: `translateY(-${diff}px)` }], {\n            duration: 500,\n            easing: 'ease-in-out'\n          }).finished\n        );\n      }\n    } else {\n      for (let i = moveFromIdx - 1; i >= moveToIdx; i--) {\n        const nextRect = elements[i + 1].getBoundingClientRect();\n        const currentRect = elements[i].getBoundingClientRect();\n        const diff = nextRect.top - currentRect.top;\n        animationArray.push(\n          elements[i].animate([{ transform: 'translateY(0)' }, { transform: `translateY(${diff}px)` }], {\n            duration: 500,\n            easing: 'ease-in-out'\n          }).finished\n        );\n      }\n    }\n    return animationArray;\n  }\n\n  #createDroppedElementAnimation(e: DragEvent, moveFromIdx: number, moveToIdx: number) {\n    const sourceElementRect = this.#sourceElement.getBoundingClientRect();\n    let moveToIndex = moveToIdx;\n    if (moveFromIdx < moveToIdx) {\n      moveToIndex--;\n    }\n    const elements = this.#tableBodyRef.querySelectorAll('tr[drag-id]');\n    let targetEle: HTMLElement;\n    elements.forEach(element => {\n      if (element.getAttribute('drag-id') && +element.getAttribute('drag-id') === moveToIndex) {\n        targetEle = element as HTMLElement;\n      }\n    });\n    const targetEleRect = targetEle.getBoundingClientRect();\n    const diffTop = targetEleRect.top - sourceElementRect.top;\n    return this.#sourceElement.animate([{ transform: 'translateY(0)' }, { transform: `translateY(${diffTop}px)` }], {\n      duration: 500,\n      easing: 'ease-in-out'\n    }).finished;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
